<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>can_shoot_tape = true;
image_speed = 0
health = 100;
vulnerable = true;
streak = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vulnerable = true;
image_alpha = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>can_shoot_tape = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (health &lt;= 0)
{
    room_goto(rm_gameover);
}

if (keyboard_check(ord("W")) || 
    keyboard_check(ord("S")) || 
    keyboard_check(ord("A")) || 
    keyboard_check(ord("D")))
{
    image_speed = 0.16;
}
else
{
    image_index = 0;
    image_speed = 0;
}

if (keyboard_check(ord("A")))
{
    if (x &gt; sprite_width/2)
    {
        x -= 4;
    }
    else
    {
        while (x &gt; sprite_width/2)
        {
            x--;
        }
    }
}
if (keyboard_check(ord("D")))
{
    if (x &lt; room_width - (sprite_width/2))
    {
        x += 4;
    }
    else
    {
        while (x &lt; room_width - (sprite_width/2))
        {
            x++;
        }
    }
}
if (keyboard_check(ord("W")))
{
    if (y &gt; sprite_height/2)
    {
        y -= 4;
    }
    else
    {
        while (y &gt; sprite_height/2)
        {
            y--;
        }
    }
}
if (keyboard_check(ord("S")))
{
    if (y &lt; room_height - (sprite_height/2))
    {
        y += 4;
    }
    else
    {
        while (y &lt; room_height - (sprite_height/2))
        {
            y++;
        }
    }
}
if (mouse_check_button_pressed(1))
{
    instance_create(x, y, obj_record);
}
if (mouse_check_button_pressed(2) &amp;&amp; can_shoot_tape == true)
{
    instance_create(x, y, obj_tape);
    can_shoot_tape = false;
    alarm[10] = 100;
}

if (point_direction(x,y,mouse_x,mouse_y) &lt;= 45 &amp;&amp; point_direction(x,y,mouse_x,mouse_y) &gt;= 0) || 
    (point_direction(x,y,mouse_x,mouse_y) &lt; 360 &amp;&amp; point_direction(x,y,mouse_x,mouse_y) &gt; 315)
{
    image_angle = 0;
}
else if (point_direction(x,y,mouse_x,mouse_y) &lt;= 135 &amp;&amp; point_direction(x,y,mouse_x,mouse_y) &gt; 45)
{
    image_angle = 90;
}
else if (point_direction(x,y,mouse_x,mouse_y) &lt;= 225 &amp;&amp; point_direction(x,y,mouse_x,mouse_y) &gt; 135)
{
    image_angle = 180;
}
else if (point_direction(x,y,mouse_x,mouse_y) &lt;= 315 &amp;&amp; point_direction(x,y,mouse_x,mouse_y) &gt; 225)
{
    image_angle = 270;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
